<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mybatis.mapper.UserMapper">
    <resultMap id="userMap" type="com.skyeagle.mybatisTest.model.SysUser">
        <id property="id" column="id"/>
        <result property="userName" column="user_name"/>
        <result property="userPassword" column="user_password"/>
        <result property="userEmail" column="user_email" />
        <result property="userInfo" column="user_info" />
        <result property="headImg" column="head_img" jdbcType="BLOB"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <select id="selectById" resultMap="userMap">
    select * from sys_user where id = #{id}
    </select>

    <select id="selectByRoleId" resultType="com.skyeagle.mybatisTest.model.SysRole">
        select * from sys_role where id = #{id}
    </select>

    <select id="selectAll" resultType="com.skyeagle.mybatisTest.model.SysUser">
    select id,
        user_name AS userName,
        user_password AS userPassword,
        user_email AS userEmail,
        user_info AS userInfo,
        head_img AS headImg,
        create_time AS createTime
    FROM sys_user
</select>

    <!--根据用户ID查找其所有的role-->
    <select id="selectRolesByUserId" resultType="com.skyeagle.mybatisTest.model.SysRole">
        select r.id,r.role_name roleName,r.enabled,r.create_by createBy,r.create_time createTime
        FROM sys_user u INNER JOIN sys_user_role ur on u.id = ur.user_id
        INNER JOIN sys_role r on r.id = ur.role_id
        WHERE u.id = #{userId}
    </select>

    <!--为了防止类型错误，对于一些特殊的数据类型，建议指定具体的jdbc Type 值。例如headimg 指定BLOB类型,createTime 指定TIME STAMP 类型。-->
    <insert id="insert">
        insert into sys_user(id,user_name,user_password,user_email,user_info,head_img,create_time)
        values (#{id},#{userName},#{userPassword},#{userEmail},#{userInfo},#{headImg,jdbcType=BLOB},#{createTime,jdbcType=TIMESTAMP})
    </insert>
    <!--JDBC自增主键-->
    <insert id="insert2" useGeneratedKeys="true" keyProperty="id">
        insert into sys_user(user_name,user_password,user_email,user_info,head_img,create_time)
        values (#{userName},#{userPassword},#{userEmail},#{userInfo},#{headImg,jdbcType=BLOB},#{createTime,jdbcType=TIMESTAMP})
    </insert>
    <!--selectKey返回主键的值-->
    <insert id="insert3">
        insert into sys_user(user_name,user_password,user_email,user_info,head_img,create_time)
        values (#{userName},#{userPassword},#{userEmail},#{userInfo},#{headImg,jdbcType=BLOB},#{createTime,jdbcType=TIMESTAMP})
        <selectKey keyColumn="id" resultType="long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <update id="updateById">
        update sys_user
        set user_name = #{userName},
            user_password = #{userPassword},
            user_email = #{userEmail},
            user_info = #{userInfo},
            head_img = #{headImg,jdbcType=BLOB},
            create_time = #{createTime,jdbcType=TIMESTAMP}
        WHERE id = #{id}
    </update>

    <delete id="deleteById">
        delete from sys_user where id = #{id}
    </delete>

    <select id="selectRolesByUserIdAndRoleEnabled" resultType="com.skyeagle.mybatisTest.model.SysRole">
        select r.id,r.role_name roleName,r.enabled,r.create_by createBy, r.create_time createTime
        from sys_user u
        join sys_user_role ur on ur.user_id = u.id
        join sys_role r on r.id = ur.role_id
        where u.id = #{userId} and r.enabled = #{enabled}
    </select>

    <select id="selectRolesByUserIdAndRoleEnabled2" resultType="com.skyeagle.mybatisTest.model.SysRole">
        select r.id,r.role_name roleName,r.enabled,r.create_by createBy, r.create_time createTime
        from sys_user u
        join sys_user_role ur on ur.user_id = u.id
        join sys_role r on r.id = ur.role_id
        where u.id = #{user.id} and r.enabled = #{role.enabled}
    </select>
</mapper>

